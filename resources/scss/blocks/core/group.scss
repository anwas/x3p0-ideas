////
/// Group block CSS.
///
/// @author Justin Tadlock <justintadlock@gmail.com>
/// @link   https://github.com/x3p0-dev/x3p0-ideas
////

@use '../../tools/prose';

// -----------------------------------------------------------------------------
// Block fixes.
// -----------------------------------------------------------------------------

///
/// Row blocks within Stack blocks lose their width and collapse. This breaks
/// the content justification set for the nested Row.
///
/// @todo Investigate further.
///
.wp-block-group-is-layout-flex.is-vertical > :where(.wp-block-group-is-layout-flex:not(.is-vertical)) {
	width: 100%;
}

// -----------------------------------------------------------------------------
// Block customizations.
// -----------------------------------------------------------------------------

///
/// Ensures that `cqi` values are based on their container, not the viewport. For
/// the Group block's grid layout, we need to specifically target the nested
/// elements because they become the container.
///
.wp-block-group-is-layout-grid > * {
	container-type: inline-size;
}

// -----------------------------------------------------------------------------
// Block style variations.
// -----------------------------------------------------------------------------

///
/// The boxed style adds some default padding and a background.
///
/// @link      https://github.com/WordPress/gutenberg/pull/57908
/// @wordpress 6.6
/// @todo      Move to `theme.json`-based style variations in WordPress 6.6.
///
.wp-block-group.is-style-box,
.editor-styles-wrapper .wp-block-group.is-style-box {
	overflow: hidden;
}

///
/// The card style adds a default border.
///
.wp-block-group.is-style-card,
.editor-styles-wrapper .wp-block-group.is-style-card {
	overflow: hidden;

	> footer {
		color:         var(--wp--custom--card-footer--color, inherit);
		background:    var(--wp--custom--card-footer--background, transparent);
		border-width:  var(--wp--custom--card-footer--border-width, 0);
		border-style:  var(--wp--custom--card-footer--border-style, solid);
		border-color:  var(--wp--custom--card-footer--border-color, transparent);
		padding:       var(--wp--custom--card-footer--padding);
	}
}

///
/// The message style is intended for notes, warnings, notices, etc.
///
.wp-block-group.is-style-message,
.editor-styles-wrapper .wp-block-group.is-style-message {
	overflow: hidden;
	@include prose.prose();
}

// -----------------------------------------------------------------------------
// Block pattern styles.
// -----------------------------------------------------------------------------

///
/// Site Footer pattern.
///
/// Note that we're specifically reversing the CSS custom properties here. If a
/// style variation defines a text/background color to the site footer, it is
/// used instead of the pattern styles. Yes, this feels a bit backwards, but the
/// patterns styles are primarily for the theme's default design. Or, rather,
/// they are specifically for global style variations that do not define a color
/// set to the footer.
///
/// @todo Figure out a better way to handle various footer patterns without the
/// need to make multiple block styles for each pattern.
///
.pattern-footer,
.editor-styles-wrapper .pattern-footer {
	&-call-to-action {
		color: var(--wp--custom--pattern--footer-call-to-action--color, inherit);
		background: var(--wp--custom--pattern--footer-call-to-action--background, transparent);
	}

	&-links {
		color: var(--wp--custom--pattern--footer-links--color, inherit);
		background: var(--wp--custom--pattern--footer-links--background, transparent);
	}
}

// -----------------------------------------------------------------------------
// Overrides.
// -----------------------------------------------------------------------------

///
/// Ensures specific styles inherit their color when used inside of a Cover.
///
.wp-block-cover .wp-block-group:is(
	.is-style-post-byline,
	.is-style-post-meta
) {
	color: inherit;
	background: transparent;
}
